# slterm - simple terminal
# See LICENSE file for copyright and license details.
.POSIX:

# To edit the configuration,
# please edit config.make in the parent directory

include ../config.make


SRC = base64.c mem.c slterm.c stsrc.c tty.c x.c main.c\
			selection.c st.c  system.c utf8.c xevent.c fonts.c\
			statusbar.c xdraw.c termdraw.c arg.c scroll.c charmaps.c mouse.c \
			keyboard.c
SRCO = base64 mem slterm tty x main  selection st  system utf8


#SRC = st.c x.c utf8.c selection.c
HEADER = st.h arg.h config.h utf8.h selection.h\
				 includes.h debug.h x.h fonts.h xevent.h statusbar.h\
				 xdraw.h termdraw.h charmaps.h mouse.h keyboard.h scroll.h



ifdef ENABLEDEBUG
		DBGFLAG=-DENABLEDEBUG=$(ENABLEDEBUG) -DDEBUG_INCLUDESRC
endif

ifeq "$(strip $(FULLDEBUG))" "1"
		DBGFLAG=-DENABLEDEBUG=$(ENABLEDEBUG) -DDEBUG_INCLUDESRC -DFULLDEBUG
endif

ifeq "$(strip $(XRESOURCES))" "1"
		XRESOURCESFLAG=-DXRESOURCES
endif


ifeq "$(strip $(UTF8F))" "1"
		UTF8FLAG=-DUTF8
else
ifeq "$(strip $(UTF8))" "1"
		UTF8FLAG=-DUTF8
endif
endif


# includes and libs
INCS = -I$(X11INC) \
       `$(PKG_CONFIG) --cflags fontconfig` \
       `$(PKG_CONFIG) --cflags freetype2`

#LIBS = -L$(X11LIB) -lm -lrt -lX11 -lutil -lXft 
LIBS = -L$(X11LIB) -lX11 -lXft \
       `$(PKG_CONFIG) --libs fontconfig` \
       `$(PKG_CONFIG) --libs freetype2`

# flags
STCPPFLAGS = -DVERSION=\"$(VERSION)\" -D_XOPEN_SOURCE=600
STCFLAGS = $(INCS) $(STCPPFLAGS) $(CPPFLAGS) $(CFLAGS) $(XRESOURCESFLAG) $(OPT_FLAG) $(UTF8FLAG) -DHISTSIZEBITS=$(HISTSIZEBITS) $(DBGFLAG) 
STLDFLAGS = $(LIBS) $(LDFLAGS) $(LINKER_FLAG) 

# OpenBSD:
#CPPFLAGS = -DVERSION=\"$(VERSION)\" -D_XOPEN_SOURCE=600 -D_BSD_SOURCE
#LIBS = -L$(X11LIB) -lm -lX11 -lutil -lXft \
#       `pkg-config --libs fontconfig` \
#       `pkg-config --libs freetype2`

# my local preferences
ifdef MISC
$(info MISC)
STCFLAGS := $(STCFLAGS) -DMISC
endif

ifeq "$(strip $(SHOWCONFIGINFO))" "1"
ifndef RECURSE
$(info Unconfigured - trying default config)
$(info If this doesn't work, please edit config.h for the configuration.)
$(info After that run as usually)
$(info 'make')
$(info 'sudo make install')
$(info The installation goes into /usr/local by default)
$(info and might be neccessary for the installation of the terminfo file;)
$(info or install only the terminfo file.)
$(info 'tic -sx slterm.info')
$(info )
endif
endif


modwarn = @echo -e "$(1) This file is autogenerated by make.\n$(1) Please edit config.in for modifications,\n$(1) changes here will be silently overwritten\n\n"



all: slterm man

static:
	gcc -o slterm stsrc.c \
		-I/usr/X11R6/include -I/usr/include/uuid -I/usr/include/freetype2 \
		-I/usr/include/freetype2 -DVERSION=\"0.98\" -D_XOPEN_SOURCE=600 \
		-DHISTSIZEBITS=14 -DENABLEDEBUG=0 -DDEBUG_INCLUDESRC \
		-Wl,-O1,--gc-sections,--start-group -lxcb -lXau -lc -lXdmcp -lbsd \
		-lXft -lfontconfig -lfreetype -lbz2 -lpng16 -lz -lexpat -luuid \
		-lintl -liconv -lXrender -lX11  \
		-Wl,--end-group -static -Os -s

staticold:
	gcc -o slterm stsrc.c \
		-I/usr/X11R6/include -I/usr/include/uuid -I/usr/include/freetype2 \
		-I/usr/include/freetype2 -DVERSION=\"0.98\" -D_XOPEN_SOURCE=600 \
		-DHISTSIZEBITS=14 -DENABLEDEBUG=0 -DDEBUG_INCLUDESRC -L/usr/X11R6/lib \
		-Wl,--start-group -lX11 -lxcb -lXau -lc -lXdmcp -lbsd -lXft -lfontconfig \
		-lfreetype -lbz2 -lpng16 -lz -lexpat -luuid -lintl -liconv -lXrender -lX11 \
		-lXt -lXm -lXmu -lfontconfig -lfreetype -lfreetype -Wl,--end-group \
		-static -Os

options:
	@echo  build options:
	@echo "CFLAGS  = $(STCFLAGS)"
	@echo "LDFLAGS = $(STLDFLAGS)"
	@echo "CC      = $(CC)"


with-utf8:
	UTF8=1 make slterm

#st: $(OBJ)
# better go in one run. Gives way more room to the compiler for optimizations.

slterm: $(SRC) $(HEADER) help.h ../config.make
	@echo '// Compile info. Generated by make.' > compile.h
	@echo -e '#define _VERSION_ "$(VERSION)"' >> compile.h 
	@echo -ne '#define __COMPILECOMMAND__ "' >> compile.h 
	@echo -ne '$(CC) -o slterm $(SRC) $(STCFLAGS) $(STLDFLAGS)' >> compile.h
	@echo -e '"' >> compile.h
	@echo -e '#define __COMPILEDATE__ "'`date`\" >>compile.h
	@echo -e '#define __UNAME__ "'`uname -m -o -r -s`\" >> compile.h
	@echo -e '#define __OPT_FLAG__ "$(OPT_FLAG)"' >> compile.h
	@echo -e '#define __UTF8__ "$(UTF8)"\n#define __XRESOURCES__  "$(XRESOURCES)"' >> compile.h
	@echo -e '#define __ENABLEDEBUG__ "$(ENABLEDEBUG)"' >> compile.h
	@echo -e '#define __CC_VERSION__ "'`$(CC) -dumpversion`'"' >> compile.h
	@echo -e '#define __CC__ "$(CC)"' >> compile.h
	$(CC) -o slterm stsrc.c $(STCFLAGS) $(STLDFLAGS) 
	
#$(CC) -o slterm $(SRC) $(STCFLAGS) $(STLDFLAGS) 
	
#-DCOMPILECOMMAND='$(CC) -o slterm $(SRC) $(STCFLAGS) $(STLDFLAGS)'
	
shared: $(SRC) $(HEADER) libslterm.so slterm.c
	$(CC) -o slterm.shared stsrc.c $(STCFLAGS) $(STLDFLAGS) 

#gcc -o slterm.shared slterm.c -lslterm -O3 
	
libslterm.so: $(SRC) $(HEADER) x.h
	$(CC) -o libslterm.so -shared -fpic $(SRC) $(STCFLAGS) $(STLDFLAGS) -Dshared



singleobjects:
	echo single
	@$(foreach var, $(SRC), $(shell echo $var; RECURSE=1 make build/`basename $(var) .c`.o) )
	#gcc -o st build/*.o

help.h: help.h.in help.txt keyref.txt
	cp help.h.in help.h
	sh -c "source colors.sh;sed -E 's/(.*)$$/echo \"\1\\\\n\\\\r\"\\\\/e' help.txt >> help.h"
	sh -c "source colors.sh;sed -E 's/(.*)$$/echo \"\1\\\\n\\\\r\"\\\\/e' keyref.txt >> help.h"
	sh -c "source colors.sh;sed -E 's/(.*)$$/echo \"\1\\\\n\\\\r\"\\\\/e' license.txt >> help.h"
	echo '";' >> help.h

keyref.txt: config.h
	gcc -P -E config.h -Dextract_keyref | \
		sed 's/|/+/;s/XK_//;s/,\s*$$//'  | sort | \
		perl keyreffilter.pl > keyref.txt


build/%.o: %.c
	$(CC) $(STCFLAGS) $(STLDFLAGS) -c -o $@ $<


#onfig.h: ../config.in
#	echo '// This file is autogenerated\
// please edit config.in for modifications,\
// This file will be silently overwritten\
' > config.h
#	sed -ne '/^..start config.h/,$$p' ../config.in >> config.h
 
#config.h: ../config.in
#	$(call modwarn,//) > config.h
#	@sed -ne '/^..start config.h/,$$p' ../config.in >> config.h
 

#config.make: ../config.in
#	$(call modwarn,#) > config.make
#	@sed -ne '/#makefilestart/,/#makefileend/p' ../config.in >> config.make


man: slterm.1

slterm.1: slterm.1.rst
	rst2man slterm.1.rst > slterm.1 || rst2man.py slterm.1.rst > slterm.1

clean:
	rm -f slterm $(OBJ) slterm-$(VERSION).tar.gz

dist: clean
	mkdir -p slterm-$(VERSION)
	cp -R FAQ LEGACY TODO LICENSE Makefile README \
		slterm.info slterm.1 arg.h st.h $(SRC)\
		slterm-$(VERSION)
	tar -cf - slterm-$(VERSION) | gzip > slterm-$(VERSION).tar.gz
	rm -rf slterm-$(VERSION)

install: slterm slterm.1
	mkdir -p $(DESTDIR)$(PREFIX)/bin
	cp -f slterm $(DESTDIR)$(PREFIX)/bin
	chmod 755 $(DESTDIR)$(PREFIX)/bin/slterm
	mkdir -p $(DESTDIR)$(MANPREFIX)/man1
	sed "s/VERSION/$(VERSION)/g" < slterm.1 > $(DESTDIR)$(MANPREFIX)/man1/slterm.1
	chmod 644 $(DESTDIR)$(MANPREFIX)/man1/slterm.1
	tic -sx slterm.info
	@echo Please see the README file regarding the terminfo entry of st.


loc-install: slterm
	su -c 'sh -c "mv /usr/local/bin/st /usr/local/bin/st.bak; cp slterm /usr/local/bin/st; chmod a+rx /usr/local/bin/st" '


uninstall:
	rm -f $(DESTDIR)$(PREFIX)/bin/slterm
	rm -f $(DESTDIR)$(MANPREFIX)/man1/slterm.1


.PHONY: all options clean dist install uninstall
