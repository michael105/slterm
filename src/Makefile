# slterm - simple terminal
# See LICENSE file for copyright and license details.
.POSIX:

# To edit the configuration,
# please edit config.make in the parent directory

include ../config.make


# my local preferences.
ifdef MISC
SHOWCONFIGINFO := 0
EMBEDRESOURCES := 0
EMBEDFONT := 0
endif


SRC = base64.c mem.c slterm_shared.c slterm_src.c tty.c xwindow.c main.c\
			selection.c term.c  system.c utf8.c xevent.c fonts.c\
			statusbar.c xdraw.c termdraw.c scroll.c charmaps.c xmouse.c \
			xkeyboard.c colors.c globals.c controlchars.c xcursor.c xclipboard.c


HEADER = term.h config.h utf8.h selection.h\
				 includes.h debug.h xwindow.h fonts.h xevent.h statusbar.h\
				 xdraw.h termdraw.h charmaps.h xmouse.h xkeyboard.h scroll.h\
				 globals.h colors.h controlchars.h xcursor.h xclipboard.h



ifdef ENABLEDEBUG
		DBGFLAG=-DENABLEDEBUG=$(ENABLEDEBUG) -DDEBUG_INCLUDESRC
endif

ifeq "$(strip $(FULLDEBUG))" "1"
		DBGFLAG=-DENABLEDEBUG=$(ENABLEDEBUG) -DDEBUG_INCLUDESRC -DFULLDEBUG
endif

ifeq "$(strip $(XRESOURCES))" "1"
		XRESOURCESFLAG=-DXRESOURCES
endif


ifeq "$(strip $(UTF8F))" "1"
		UTF8FLAG=-DUTF8
else
ifeq "$(strip $(UTF8))" "1"
		UTF8FLAG=-DUTF8
endif
endif

# includes and libs
INCS = -I$(X11INC) \
       `$(PKG_CONFIG) --cflags fontconfig` \
       `$(PKG_CONFIG) --cflags freetype2`

#LIBS = -L$(X11LIB) -lm -lrt -lX11 -lutil -lXft 
LIBS = -L$(X11LIB) -lX11 -lXft -lc -lm \
       `$(PKG_CONFIG) --libs fontconfig` \
       `$(PKG_CONFIG) --libs freetype2`

# flags
STCPPFLAGS = -DVERSION=\"$(VERSION)\" -D_XOPEN_SOURCE=600
STCFLAGS = $(INCS) $(STCPPFLAGS) $(CPPFLAGS) $(CFLAGS) $(XRESOURCESFLAG) \
           $(OPT_FLAG) $(UTF8FLAG) -DHISTSIZEBITS=$(HISTSIZEBITS) $(DBGFLAG) \
           -DEMBEDFONT=$(EMBEDFONT)

STLDFLAGS = $(LIBS) $(LDFLAGS) $(LINKER_FLAG) 

ifeq "$(strip $(EMBEDRESOURCES))" "1"
		STCFLAGS += -DINCLUDETERMINFO -DINCLUDEMANPAGE -DINCLUDELICENSE
endif


# OpenBSD:
#CPPFLAGS = -DVERSION=\"$(VERSION)\" -D_XOPEN_SOURCE=600 -D_BSD_SOURCE
#LIBS = -L$(X11LIB) -lm -lX11 -lutil -lXft \
#       `pkg-config --libs fontconfig` \
#       `pkg-config --libs freetype2`

# my local preferences
ifdef MISC
$(info MISC)
STCFLAGS := $(STCFLAGS) -DMISC
endif

ifeq "$(strip $(SHOWCONFIGINFO))" "1"
ifndef RECURSE

define UNCINFO

Unconfigured - trying default config
If this doesn't work, please edit config.h for the configuration.
After that run as usually
'make'
'sudo make install'
The installation goes into /usr/local by default
and might be neccessary for the installation of the terminfo file;
or install only the terminfo file.
'tic -sx src/slterm.terminfo'

endef

$(info $(UNCINFO))
endif
endif

ifeq "$(strip $(EMBEDFONT))" "1"
$(info embed fonts:)
EMBEDFONTS := $(foreach file,$(wildcard embed/*.ttf),$(patsubst %.ttf,%_ttfz.o,$(file)))
#TMP := $(shell make -C embed)
$(info $(EMBEDFONTS))
else
EMBEDFONTS :=
endif



modwarn = @echo -e "$(1) This file is autogenerated by make.\n$(1) Please edit config.in for modifications,\n$(1) changes here will be silently overwritten\n\n"



all: slterm man slterm_terminfo.h slterm_license.h slterm_man.h $(EMBEDFONTS)

# better go in one run. Gives way more room to the compiler for optimizations.
slterm: $(SRC) $(HEADER) help.h ../config.make compile.h $(EMBEDFONTS)
	$(CC) -o slterm $(EMBEDFONTS) slterm_src.c $(STCFLAGS) $(STLDFLAGS)


static_embedfont: 
	$(MAKE) static_recurse EMBEDFONT=1

static:
	$(MAKE) static_recurse

static_recurse: slterm_terminfo.h slterm_license.h compile.h $(EMBEDFONTS)
	gcc -o slterm $(EMBEDFONTS) slterm_src.c \
		$(STCFLAGS) \
		-Wl,-O1,--gc-sections,--start-group -lxcb -lXau -lc -lXdmcp -lbsd \
		-lXft -lfontconfig -lfreetype -lbz2 -lpng16 -lz -lexpat -luuid \
		-lintl -liconv -lXrender -lX11  \
		-Wl,--end-group -static -Os -s

embed/%.o: embed/%.c
	gcc -o $@ -c $<

embed/%_ttfz.c: embed/%.ttfz
	@echo "$(notdir $<) -> $(@F)"
	cd embed && xxd -i $(notdir $<) > $(@F)


embed/%.ttfz: embed/%.ttf
	@echo "compressing $<  ->  $@"
	../tools/ttfz $< $@

staticold:
	gcc -o slterm slterm_src.c \
		-I/usr/X11R6/include -I/usr/include/uuid -I/usr/include/freetype2 \
		-I/usr/include/freetype2 -DVERSION=\"0.98\" -D_XOPEN_SOURCE=600 \
		-DHISTSIZEBITS=14 -DENABLEDEBUG=0 -DDEBUG_INCLUDESRC -L/usr/X11R6/lib \
		-Wl,--start-group -lX11 -lxcb -lXau -lc -lXdmcp -lbsd -lXft -lfontconfig \
		-lfreetype -lbz2 -lpng16 -lz -lexpat -luuid -lintl -liconv -lXrender -lX11 \
		-lXt -lXm -lXmu -lfontconfig -lfreetype -lfreetype -Wl,--end-group \
		-static -Os

options:
	@echo  build options:
	@echo "CFLAGS  = $(STCFLAGS)"
	@echo "LDFLAGS = $(STLDFLAGS)"
	@echo "CC      = $(CC)"


slterm_terminfo.h: slterm.terminfo
	(echo -n 'const char* slterm_terminfo = R"('; cat slterm.terminfo; echo -e ')";\n' ) > slterm_terminfo.h


slterm_license.h: ../LICENSE
	(echo -n 'const char* slterm_license = R"('; cat ../LICENSE; echo -e ')";\n' ) > slterm_license.h

slterm_man.h: slterm.1
	(echo -n 'const char* slterm_man = R"('; man -P cat ./slterm.1; echo -e ')";\n' ) > slterm_man.h


with-utf8:
	UTF8=1 make slterm


compile.h: 
	@echo '// Compile info. Generated by make.' > compile.h
	@echo '#define _VERSION_ "$(VERSION)"' >> compile.h 
	@echo -n '#define __COMPILECOMMAND__ "' >> compile.h 
	@echo -n '$(CC) -o slterm $(SRC) $(STCFLAGS) $(STLDFLAGS)' >> compile.h
	@echo '"' >> compile.h
	@echo '#define __COMPILEDATE__ "'`date`\" >>compile.h
	@echo '#define __UNAME__ "'`uname -m -o -r -s`\" >> compile.h
	@echo '#define __OPT_FLAG__ "$(OPT_FLAG)"' >> compile.h
	@echo '#define __UTF8__ "$(UTF8)"'
	@echo '#define __XRESOURCES__  "$(XRESOURCES)"' >> compile.h
	@echo '#define __ENABLEDEBUG__ "$(ENABLEDEBUG)"' >> compile.h
	@echo '#define __CC_VERSION__ "'`$(CC) -dumpversion`'"' >> compile.h
	@echo '#define __CC__ "$(CC)"' >> compile.h
	@echo compile:
	cat compile.h

	
	
shared: $(SRC) $(HEADER) libslterm.so slterm_shared.c
	$(CC) -o slterm.shared slterm_src.c $(STCFLAGS) $(STLDFLAGS) 

	
libslterm.so: $(SRC) $(HEADER) x.h
	$(CC) -o libslterm.so -shared -fpic $(SRC) $(STCFLAGS) $(STLDFLAGS) -Dshared -DEMBEDFONT=$(EMBEDFONT) 



singleobjects:
	echo single
	@$(foreach var, $(SRC), $(shell echo $var; RECURSE=1 make build/`basename $(var) .c`.o) )
	#gcc -o st build/*.o

help.h: help.h.in help.txt keyref.txt
	cp help.h.in help.h 
	sh -c "source colors.sh;sed -E 's/(.*)$$/echo \"\1\\\\n\\\\r\"\\\\/e' help.txt >> help.h"
	sh -c "source colors.sh;sed -E 's/(.*)$$/echo \"\1\\\\n\\\\r\"\\\\/e' keyref.txt >> help.h"
	sh -c "source colors.sh;sed -E 's/(.*)$$/echo \"\1\\\\n\\\\r\"\\\\/e' license.txt >> help.h"
	echo '";' >> help.h
	sed -Ei 's/\{VERSION}/$(VERSION)/' help.h

keyref.txt: config.h
	gcc -P -E config.h -Dextract_keyref | \
		sed 's/|/+/;s/XK_//;s/,\s*$$//'  | sort | \
		perl keyreffilter.pl | sort > keyref.txt


build/%.o: %.c
	$(CC) $(STCFLAGS) $(STLDFLAGS) -c -o $@ $<


#onfig.h: ../config.in
#	echo '// This file is autogenerated\
// please edit config.in for modifications,\
// This file will be silently overwritten\
' > config.h
#	sed -ne '/^..start config.h/,$$p' ../config.in >> config.h
 
#config.h: ../config.in
#	$(call modwarn,//) > config.h
#	@sed -ne '/^..start config.h/,$$p' ../config.in >> config.h
 

#config.make: ../config.in
#	$(call modwarn,#) > config.make
#	@sed -ne '/#makefilestart/,/#makefileend/p' ../config.in >> config.make


man: slterm.1

slterm.1: slterm.1.rst
	rst2man slterm.1.rst > slterm.1 || rst2man.py slterm.1.rst > slterm.1

clean:
	rm -f slterm $(OBJ) slterm-$(VERSION).tar.gz


check:
	./slterm -h && ./slterm -V && ./slterm -H 

#./slterm sh -c "echo ok"


dist: clean
	mkdir -p slterm-$(VERSION)
	cp -R FAQ LEGACY TODO LICENSE Makefile README \
		slterm.terminfo slterm.1 arg.h term.h $(SRC)\
		slterm-$(VERSION)
	tar -cf - slterm-$(VERSION) | gzip > slterm-$(VERSION).tar.gz
	rm -rf slterm-$(VERSION)

install: slterm slterm.1
	mkdir -p $(DESTDIR)$(PREFIX)/bin
	cp -f slterm $(DESTDIR)$(PREFIX)/bin
	chmod 755 $(DESTDIR)$(PREFIX)/bin/slterm
	mkdir -p $(DESTDIR)$(MANPREFIX)/man1
	sed "s/VERSION/$(VERSION)/g" < slterm.1 > $(DESTDIR)$(MANPREFIX)/man1/slterm.1
	chmod 644 $(DESTDIR)$(MANPREFIX)/man1/slterm.1
	tic -sx slterm.terminfo
	@echo Please see the README file regarding the terminfo entry of st.


loc-install: slterm
	su -c 'sh -c "mv /usr/local/bin/st /usr/local/bin/st.bak; cp slterm /usr/local/bin/st; chmod a+rx /usr/local/bin/st" '


uninstall:
	rm -f $(DESTDIR)$(PREFIX)/bin/slterm
	rm -f $(DESTDIR)$(MANPREFIX)/man1/slterm.1


.PHONY: all options clean dist install uninstall
